<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>