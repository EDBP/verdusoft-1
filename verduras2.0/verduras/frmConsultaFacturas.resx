<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>